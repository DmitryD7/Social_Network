{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","../node_modules/@material-ui/icons/Send.js","Components/Dialogs/DialogItem/DialogsItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Message/AddMessageForm.tsx","Components/Dialogs/Dialogs.tsx","hoc/AuthRedirect.tsx","Components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","_interopRequireDefault","require","Object","defineProperty","value","default","_react","_default","createElement","d","DialogItem","props","path","id","className","s","dialog","to","name","Message","messageEl","messageAvatar","src","userAvatar","alt","message","maxLength50","maxLength","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","messageForm","Field","component","Textarea","placeholder","validate","Button","type","Dialogs","dialogsElements","dialogsPage","dialogs","map","ListItem","key","messagesElements","messages","m","messagesItem","isAuth","dialogsItems","List","values","addMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","addMessageActionCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,0BAA0B,aAAe,8BAA8B,YAAc,6BAA6B,UAAY,2BAA2B,QAAU,yBAAyB,cAAgB,iC,iCCC1V,IAAIC,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeJ,EAAS,aAAc,CAC3CK,OAAO,IAETL,EAAQM,aAAU,EAElB,IAAIC,EAASN,EAAuBC,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,KAElBI,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,0CACD,QAEJV,EAAQM,QAAUE,G,+FCAHG,EATqC,SAACC,GACjD,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASC,GAAIL,GAAOD,EAAMO,Q,kBCMvBC,EAVC,SAACR,GACb,OACI,yBAAKG,UAAWC,IAAEK,WACd,yBAAKN,UAAWC,IAAEM,cAAeC,IAAKC,IAAYC,IAAI,eACtD,yBAAKV,UAAWC,IAAEU,SAAUd,EAAMc,W,qECAxCC,EAAcC,YAAU,IAoBjBC,EAAsBC,YAAkC,CAACC,KAAM,wBAAzCD,EAlByC,SAAClB,GACzE,OACI,0BAAMoB,SAAUpB,EAAMqB,aAAclB,UAAWC,IAAEkB,aAC7C,6BACI,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXlB,KAAM,iBACNmB,YAAa,qBACbC,SAAU,CAACZ,MAGnB,6BACI,kBAACa,EAAA,EAAD,CAAQC,KAAM,UAAU,kBAAC,IAAD,Y,kBCkBzBC,MA3Bf,SAAiB9B,GAEb,IAAI+B,EAAkB/B,EAAMgC,YAAYC,QAAQC,KAAI,SAAApC,GAAC,OAAI,kBAACqC,EAAA,EAAD,KAAU,kBAAC,EAAD,CAAY5B,KAAMT,EAAES,KAAML,GAAIJ,EAAEI,GAAIkC,IAAKtC,EAAEI,SAC1GmC,EAAmBrC,EAAMgC,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAI,yBAAKpC,UAAWC,IAAEoC,cAAc,kBAAC,EAAD,CACvF1B,QAASyB,EAAEzB,QAASsB,IAAKG,EAAErC,SAM/B,OAAKF,EAAMyC,OAGP,yBAAKtC,UAAWC,IAAE6B,SACd,yBAAK9B,UAAWC,IAAEsC,cACd,kBAACC,EAAA,EAAD,KAAOZ,IAEX,6BACI,yBAAK5B,UAAWC,IAAEkC,UACbD,EACD,kBAACpB,EAAD,CAAqBG,SAdjB,SAACwB,GACjB5C,EAAM6C,WAAWD,EAAOE,sBAGF,kBAAC,IAAD,CAAUxC,GAAI,Y,wCClBtCyC,EAA6B,SAACC,GAAD,MAAuD,CACtFP,OAAQO,EAAMC,KAAKR,SAgBRS,EAbiB,SAACC,GAAoB,IAC3CC,EAD0C,uKAGxC,OAAKC,KAAKrD,MAAMyC,OACT,kBAACU,EAAcE,KAAKrD,OADI,kBAAC,IAAD,CAAUM,GAAI,eAHL,GAChBgD,IAAMH,WAQtC,OADqCI,YAAQR,EAARQ,CAAoCH,I,QCU9DI,sBACXD,aAfoB,SAACP,GACrB,MAAO,CACHhB,YAAagB,EAAMhB,gBAIA,SAACyB,GACxB,MAAO,CACHZ,WAAY,SAACC,GACTW,EAASC,YAAwBZ,SAOzCI,EAFWM,CAGb1B","file":"static/js/4.34cc2af1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__sgx8u\",\"dialog\":\"Dialogs_dialog__1eizV\",\"dialogsItems\":\"Dialogs_dialogsItems__27TGx\",\"messages\":\"Dialogs_messages__1J8hD\",\"messagesItem\":\"Dialogs_messagesItem__13H2L\",\"messageForm\":\"Dialogs_messageForm__aaQUC\",\"messageEl\":\"Dialogs_messageEl__yYeMt\",\"message\":\"Dialogs_message__2Py_j\",\"messageAvatar\":\"Dialogs_messageAvatar__1Cod3\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","import React from 'react';\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItemPropsTypes = {\r\n    name: string,\r\n    id: number,\r\n}\r\nconst DialogItem: React.FC <DialogItemPropsTypes> = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport userAvatar from '../../../assets/images/UserAvatar.png'\r\n\r\n\r\ntype MessagePropsTypes = {\r\n    message: string,\r\n}\r\nconst Message = (props: MessagePropsTypes) => {\r\n    return (\r\n        <div className={s.messageEl}>\r\n            <img className={s.messageAvatar} src={userAvatar} alt=\"avatarIcon\"/>\r\n            <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormControls\";\r\nimport {maxLength} from \"../../common/validators/Validators\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport s from '../Dialogs.module.css';\r\n\r\nexport type AddMessageFormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength50 = maxLength(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.messageForm}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={'newMessageBody'}\r\n                    placeholder={'Enter your message'}\r\n                    validate={[maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button type={\"submit\"}><SendIcon/></Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm<AddMessageFormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogsPageType} from \"../../redux/store\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AddMessageFormDataType, AddMessageFormRedux} from \"./Message/AddMessageForm\";\r\nimport {List, ListItem} from \"@material-ui/core\";\r\n\r\n\r\ntype DialogsPagePropsType = {\r\n    dialogsPage: DialogsPageType,\r\n    addMessage: (newMessageBody: string) => void,\r\n    isAuth: boolean\r\n};\r\n\r\n\r\nfunction Dialogs(props: DialogsPagePropsType) {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <ListItem><DialogItem name={d.name} id={d.id} key={d.id}/></ListItem>)\r\n    let messagesElements = props.dialogsPage.messages.map(m => <div className={s.messagesItem}><Message\r\n        message={m.message} key={m.id}/></div>)\r\n\r\n    let addNewMessage = (values: AddMessageFormDataType) => {\r\n        props.addMessage(values.newMessageBody)\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                <List>{dialogsElements}</List>\r\n            </div>\r\n            <div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {Component, JSXElementConstructor} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/reduxStore\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype RedirectMapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): RedirectMapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\nexport default withAuthRedirect;","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../redux/DialogsReducer/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {DialogsPageType} from \"../../redux/store\";\r\nimport withAuthRedirect from \"../../hoc/AuthRedirect\";\r\nimport {compose} from 'redux';\r\n\r\ntype DialogsMapDispatchToPropsType = {\r\n    addMessage: (newMessageBody: string) => void\r\n}\r\n\r\ntype DialogsMapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): DialogsMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any): DialogsMapDispatchToPropsType => {\r\n    return {\r\n        addMessage: (newMessageBody: string) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<any>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}
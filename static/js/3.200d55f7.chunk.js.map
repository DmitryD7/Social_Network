{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","../node_modules/@material-ui/icons/Save.js","../node_modules/@material-ui/icons/Edit.js","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","../node_modules/@material-ui/icons/Favorite.js","Components/Profile/Profile.module.css","Components/Profile/ProfilePhoto/ProfilePhoto.module.css","Components/Profile/Following/Following.module.css","Components/Users/Friend/Friend.module.css","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHooks.tsx","Components/Profile/ProfileInfo/ProfileDataForm.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/Post/AddPostForm.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/ProfilePhoto/ProfilePhoto.tsx","Components/Users/Friend/Friend.tsx","Components/Profile/Following/Following.tsx","Components/Profile/Profile.tsx","Components/Profile/ProfileContainer.tsx"],"names":["module","exports","_interopRequireDefault","require","Object","defineProperty","value","default","_react","_default","createElement","d","ProfileStatusHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","ProfileStatus","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","isOwner","title","ProfileDataFormRedux","reduxForm","form","handleSubmit","profile","error","onSubmit","editForm","editButton","Button","type","Field","placeholder","name","component","Input","validate","requiredField","Textarea","keys","contacts","map","key","contact","formSummaryError","ProfileInfo","CircularProgress","descriptionBlock","formData","saveProfile","then","initialValues","activateEditMode","infoContainer","ProfileData","profileData","onClick","size","myName","fullName","aboutMe","contactTitle","contactValue","jobInfo","lookingForAJob","lookingForAJobDescription","Contact","Post","item","src","photo","userAvatar","alt","postPhoto","postData","message","postLikes","color","likesCount","maxLength10","maxLength","AddPostFormRedux","style","marginTop","variant","MyPosts","React","memo","postsElements","posts","p","id","onAddPost","useCallback","values","addPost","newPostBody","PostsBlock","postContainer","MyPostsContainer","connect","state","profilePage","photos","small","dispatch","ProfilePhoto","large","mainAvatar","display","files","length","saveAvatar","Friend","to","userId","userPhotoSmall","avatar","userName","Following","getFriends","useDispatch","friends","useSelector","usersPage","console","log","friendsList","f","Profile","column1","profilePhoto","column2","ProfileContainer","this","match","params","authorizedUserId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.200d55f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3OrvS\",\"infoContainer\":\"ProfileInfo_infoContainer__2Fwba\",\"contact\":\"ProfileInfo_contact__1ij0M\",\"formSummaryError\":\"ProfileInfo_formSummaryError__1fHbS\",\"profileData\":\"ProfileInfo_profileData__2-HPX\",\"myName\":\"ProfileInfo_myName__1NG9k\",\"editButton\":\"ProfileInfo_editButton__10ufK\",\"aboutMe\":\"ProfileInfo_aboutMe__1UKYu\",\"jobInfo\":\"ProfileInfo_jobInfo__jM56_\",\"editForm\":\"ProfileInfo_editForm__3M9rJ\",\"saveButton\":\"ProfileInfo_saveButton__1IS4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileStatus\":\"ProfileStatus_ProfileStatus__3EJxX\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostsBlock\":\"MyPosts_PostsBlock__MRVJj\",\"postContainer\":\"MyPosts_postContainer__18Ok0\",\"posts\":\"MyPosts_posts__2Z5yQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__34bwU\",\"postPhoto\":\"Post_postPhoto__32XXu\",\"postData\":\"Post_postData__1rAKM\",\"postLikes\":\"Post_postLikes__29cTb\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__22Xv1\",\"column1\":\"Profile_column1__2r8sv\",\"profilePhoto\":\"Profile_profilePhoto__2JKlE\",\"friends\":\"Profile_friends__dAKeN\",\"column2\":\"Profile_column2__VT8ox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfilePhoto\":\"ProfilePhoto_ProfilePhoto__tVm29\",\"mainAvatar\":\"ProfilePhoto_mainAvatar__1TpKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Following\":\"Following_Following__jbFrd\",\"friendsList\":\"Following_friendsList__1KJec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friend\":\"Friend_Friend__21DU8\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './ProfileStatus.module.css';\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileStatusHooks = (props: ProfileStatusType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (status !== props.status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status])\r\n\r\n    return <div className={s.ProfileStatus}>\r\n        {!editMode\r\n            ? <div>\r\n               <h4>My Status: </h4> <span onDoubleClick={activateEditMode} title={'Double click to change'}>{props.status || \"-------\"}</span>\r\n            </div>\r\n            : <div>\r\n                <input\r\n                    onBlur={deactivateEditMode}\r\n                    value={status}\r\n                    autoFocus\r\n                    onChange={onStatusChange}\r\n                />\r\n            </div>\r\n        }\r\n    </div>\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormControls\";\r\nimport {requiredField} from \"../../common/validators/Validators\";\r\nimport {GetProfileResponseType} from \"../../../API/API\";\r\nimport s from './ProfileInfo.module.css';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport type ProfileDataFormType = {\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    LookingForAJobDescription: string\r\n    aboutMe: string\r\n}\r\ntype PropsType = {\r\n    profile: GetProfileResponseType\r\n}\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileDataFormType> & PropsType> = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit} className={s.editForm}>\r\n        <div className={s.editButton}>\r\n            <Button type={\"submit\"}><SaveIcon/></Button>\r\n        </div>\r\n        <h3>ABOUT ME:</h3>\r\n        <div>\r\n            <b>Full name:</b> <Field placeholder={'Full name'} name={'fullName'} component={Input}\r\n                                     validate={[requiredField]}/>\r\n        </div>\r\n        <div>\r\n            <b>About me:</b> <Field\r\n            component={Textarea}\r\n            name={'aboutMe'}\r\n            placeholder={'Enter some info about yourself:'}\r\n            validate={[requiredField]}\r\n        />\r\n        </div>\r\n        <hr/>\r\n        <h4>Contacts:</h4>\r\n            <div>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <div className={s.contact}>\r\n                        <b>{key}</b>: <Field key={key} placeholder={key} name={`contacts.${key}`} component={Input}/>\r\n                    </div>\r\n                    }\r\n                )}\r\n            </div>\r\n        <div>\r\n            <b>Is looking for a job:</b> <Field type={'checkbox'} name={'lookingForAJob'} component={Input}/>\r\n        </div>\r\n        <div>\r\n            <b>My professional skills:</b> <Field\r\n            component={Textarea}\r\n            name={'lookingForAJobDescription'}\r\n            placeholder={'Enter your skills:'}\r\n            validate={[requiredField]}\r\n        />\r\n        </div>\r\n        {error && <div className={s.formSummaryError}>{error}</div>}\r\n        <hr/>\r\n    </form>\r\n}\r\n\r\n// @ts-ignore\r\nexport const ProfileDataFormRedux = reduxForm<ProfileDataFormType, PropsType>({form: 'editProfile'})(ProfileDataForm)","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {ContactsType, GetProfileResponseType} from \"../../../API/API\";\r\nimport {ProfileStatusHooks} from \"./ProfileStatus/ProfileStatusHooks\";\r\nimport {ProfileDataFormRedux, ProfileDataFormType} from \"./ProfileDataForm\";\r\nimport {Button, CircularProgress} from \"@material-ui/core\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsTypes) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <CircularProgress/>\r\n    }\r\n\r\n    const onSubmitHandler = (formData: ProfileDataFormType) => {\r\n        props.saveProfile(formData).then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                {editMode\r\n                    ? <ProfileDataFormRedux onSubmit={onSubmitHandler} initialValues={props.profile}\r\n                                            profile={props.profile}/>\r\n                    : <ProfileData profile={props.profile} isOwner={props.isOwner}\r\n                                   activateEditMode={() => {\r\n                                       setEditMode(true)\r\n                                   }}/>}\r\n                <div className={s.infoContainer}><ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner}/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProfileInfo;\r\n\r\ntype ProfileDataType = {\r\n    profile: GetProfileResponseType\r\n    isOwner: boolean\r\n    activateEditMode: () => void\r\n}\r\n\r\nconst ProfileData = (props: ProfileDataType) => {\r\n    return <div className={s.profileData}>\r\n        <div className={s.editButton}>\r\n            {props.isOwner && <Button onClick={props.activateEditMode} size={\"small\"}><EditIcon/></Button>}\r\n        </div>\r\n\r\n        <div className={s.myName}>\r\n            <h3>Hello, my name is <span>{props.profile.fullName}</span></h3>\r\n        </div>\r\n\r\n        <div>\r\n            <div className={s.infoContainer}>\r\n                <div className={s.aboutMe}>\r\n                    <h4>About me:</h4> <span>{props.profile.aboutMe}</span>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            <div>\r\n                <div className={s.infoContainer}>\r\n                    <h4>My Contacts:</h4>\r\n                    <div>\r\n                        {Object.keys(props.profile.contacts).map(key => <Contact key={key} contactTitle={key}\r\n                                                                                 contactValue={props.profile.contacts[key as keyof ContactsType]}/>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <hr/>\r\n        <div className={s.infoContainer}>\r\n            <div className={s.jobInfo}>\r\n                <div><span><b>Is looking for a job:</b> {props.profile.lookingForAJob ? 'yes' : 'no'}</span></div>\r\n                <div><span><b>My professional skills:</b> {props.profile.lookingForAJobDescription}</span></div>\r\n            </div>\r\n        </div>\r\n        <hr/>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = (props: ContactType) => {\r\n    return <div className={s.contact}>\r\n        <span><b>{props.contactTitle}</b>: {props.contactValue}</span>\r\n    </div>\r\n}\r\n\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\ntype ProfileInfoPropsTypes = {\r\n    profile: GetProfileResponseType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    saveProfile: (formData: ProfileDataFormType) => Promise<any>\r\n}","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport userAvatar from '../../../../assets/images/UserAvatar.png'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\ntype postPropsType = {\r\n    message: string,\r\n    likesCount: number,\r\n    photo: string\r\n}\r\n\r\nconst Post = (props: postPropsType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.photo || userAvatar} alt=\"avatar\" className={s.postPhoto}/>\r\n            <div className={s.postData}>\r\n                <span>{props.message}</span>\r\n                <div className={s.postLikes}><Button><FavoriteIcon color={\"secondary\"}/></Button> - {props.likesCount} </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength} from \"../../../common/validators/Validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormControls\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport type AddPostFormDataType = {\r\n    newPostBody: string\r\n}\r\n\r\nconst maxLength10 = maxLength(10)\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<AddPostFormDataType>> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field\r\n                component={Textarea}\r\n                name={'newPostBody'}\r\n                placeholder={'Enter post text'}\r\n                validate={[maxLength10]}/>\r\n        </div>\r\n        <div style={{marginTop: '10px'}}>\r\n            <Button type={\"submit\"} variant={\"outlined\"} size={\"small\"}>Add post</Button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport const AddPostFormRedux = reduxForm<AddPostFormDataType>({form: 'ProfileAddNewPostForm'})(AddPostForm)","import React, {useCallback} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {AddPostFormDataType, AddPostFormRedux} from \"./Post/AddPostForm\";\r\nimport {PostsType} from \"../../../redux/ProfileReducer/profileReducer\";\r\n\r\nexport const MyPosts = React.memo((props: myPostsType) => {\r\n    const postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} photo={props.photo}/>)\r\n\r\n    const onAddPost = useCallback((values: AddPostFormDataType) => {\r\n        props.addPost(values.newPostBody);\r\n    }, [props]);\r\n\r\n\r\n    return (\r\n        <div className={s.PostsBlock}>\r\n            <div className={s.postContainer}>\r\n                <h3>My posts:</h3>\r\n                <AddPostFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\ntype myPostsType = {\r\n    posts: Array<PostsType>,\r\n    addPost: (newPostBody: string) => void,\r\n    photo: string\r\n}","import React from 'react';\r\nimport {addPost, PostsType} from \"../../../redux/ProfileReducer/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {MyPosts} from \"./MyPosts\";\r\n\r\ntype MyPostsMapDispatchToPropsType = {\r\n    addPost: (newPostBody: string) => void\r\n}\r\n\r\ntype MyPostsMapStateToPropsType = {\r\n    posts: Array<PostsType>\r\n    photo: string\r\n}\r\n\r\nconst MapStateToProps = (state: AppStateType): MyPostsMapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        photo: state.profilePage.profile.photos.small\r\n    }\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch: any): MyPostsMapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPostBody: string) => {\r\n            dispatch(addPost(newPostBody))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(MapStateToProps, MapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React, {ChangeEvent} from 'react';\r\nimport s from './ProfilePhoto.module.css';\r\nimport userAvatar from '../../../assets/images/UserAvatar.png'\r\nimport {GetProfileResponseType} from \"../../../API/API\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport const ProfilePhoto = (props: ProfilePhotoPropsType) => {\r\n    const onMainAvatarSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.files?.length) {\r\n            props.saveAvatar(e.currentTarget.files[0])\r\n        }\r\n    }\r\n\r\n    return <div className={s.ProfilePhoto}>\r\n        <img src={props.profile.photos.large || userAvatar} className={s.mainAvatar}/>\r\n        {props.isOwner && <Button variant=\"contained\" component=\"label\" size={\"small\"}> Upload new photo\r\n            <input type=\"file\" style={{display: \"none\"}} onChange={onMainAvatarSelected}/>\r\n        </Button>}\r\n    </div>\r\n}\r\n\r\ntype ProfilePhotoPropsType = {\r\n    profile: GetProfileResponseType\r\n    isOwner: boolean\r\n    saveAvatar: (avatar: File) => void\r\n}","import React from 'react';\r\nimport s from './Friend.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userAvatar from \"../../../assets/images/UserAvatar.png\";\r\n\r\nexport const Friend = (props: FriendPropsType) => {\r\n    return <div className={s.Friend}>\r\n        <div>\r\n            <NavLink to={'/profile/' + props.userId}>\r\n                <img src={props.userPhotoSmall !== null ? props.userPhotoSmall : userAvatar}\r\n                     alt=\"avatar\"\r\n                     className={s.avatar}/>\r\n            </NavLink>\r\n        </div>\r\n        <div>\r\n            <span>{props.userName}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype FriendPropsType = {\r\n    userId: number\r\n    userPhotoSmall: string\r\n    userName: string\r\n}","import React, {useEffect} from 'react';\r\nimport s from './Following.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {getFriends, UsersType} from \"../../../redux/UsersReducer/usersReducer\";\r\nimport {Friend} from \"../../Users/Friend/Friend\";\r\n\r\nexport const Following = (props: FollowingPropsType) => {\r\n    useEffect(() => {\r\n        dispatch(getFriends(true))\r\n    }, [])\r\n\r\n    const dispatch = useDispatch()\r\n    const friends = useSelector<AppStateType, Array<UsersType>>(state => state.usersPage.friends)\r\n    console.log('FRIENDS: ', friends)\r\n\r\n    return <div className={s.Following}>\r\n        <h3>My Friends</h3>\r\n        <div className={s.friendsList}>\r\n            {friends.map(f => <Friend key={f.id} userId={f.id} userPhotoSmall={f.photos.small} userName={f.name}/>)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype FollowingPropsType = {}","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from './Profile.module.css'\r\nimport {GetProfileResponseType} from \"../../API/API\";\r\nimport {ProfileDataFormType} from \"./ProfileInfo/ProfileDataForm\";\r\nimport {ProfilePhoto} from \"./ProfilePhoto/ProfilePhoto\";\r\nimport {Following} from \"./Following/Following\";\r\n\r\ntype ProfilePagePropsType = {\r\n    profile: GetProfileResponseType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    saveAvatar: (avatar: File) => void\r\n    saveProfile: (formData: ProfileDataFormType) => Promise<any>\r\n};\r\n\r\nfunction Profile(props: ProfilePagePropsType) {\r\n    return <div className={s.profile}>\r\n        <div className={s.column1}>\r\n            <div className={s.profilePhoto}>\r\n                <ProfilePhoto profile={props.profile} isOwner={props.isOwner} saveAvatar={props.saveAvatar}/>\r\n            </div>\r\n            <div className={s.friends}>\r\n                <Following/>\r\n            </div>\r\n        </div>\r\n        <div className={s.column2}>\r\n            <ProfileInfo\r\n            profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n            isOwner={props.isOwner}\r\n            saveProfile={props.saveProfile}\r\n\r\n        />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, saveAvatar, saveProfile, updateStatus} from \"../../redux/ProfileReducer/profileReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {RouteComponentProps, withRouter} from 'react-router';\r\nimport {compose} from 'redux';\r\nimport {GetProfileResponseType} from \"../../API/API\";\r\nimport {ProfileDataFormType} from \"./ProfileInfo/ProfileDataForm\";\r\n\r\ntype mapStateToPropsType = {\r\n    profile: GetProfileResponseType\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n    saveAvatar: (avatar: File) => void\r\n    saveProfile: (formData: ProfileDataFormType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: any\r\n}\r\n\r\ntype ProfileContainerType = mapStateToPropsType & mapDispatchToPropsType\r\ntype CommonPropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\r\n\r\nclass ProfileContainer extends React.Component<CommonPropsType> {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId){\r\n            userId = this.props.authorizedUserId\r\n            if (!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<CommonPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        this.props.match.params.userId !== prevProps.match.params.userId && this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, saveAvatar, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}